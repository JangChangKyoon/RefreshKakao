
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    //log4j2를 사용할거기 때문에 기존 spring-boot-starter-web 에 내장되어 있는 logback 기능을 제외
//    all {
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //ObjectMapper
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
    //XSS(Cross-site Scripting) Filter
    implementation 'org.apache.commons:commons-text:1.9'
    //Security
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Query DSL 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // jdbc
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    //
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'

}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
